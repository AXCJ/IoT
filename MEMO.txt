http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/

例如我現在有個叫做 Animal 專案資料夾，我現在想要開始使用 Git 開始管理，
因此我先將目錄切換到 Animal 底下後輸入git init

reset 可以清空螢幕
touch可以用來創建檔案 
touch README.md  

cat可以看內容
cat README.md

rm可以刪除檔案
rm README.md

ls -l 可以列出所有檔案以及資訊
git config --global color.ui true 好像是可以開啟甚麼顏色介面的
cat ~/.gitconfig 可以看gitconfig裡面設定的東西
git clone <網址> 可以把git檔案抓下來

git add README.md 可以將README.md這個檔案新增到即將要commit的list上
git add . 可將資料夾底下的所有檔案都新增到即將要commit的list上

git add *.c 可加入所有.C的檔案
git help <指令> 可以看這個指令的解釋

vi可用來編輯
vi README.md
此時還不能輸入字元，必須按A，I之類的特定按鍵才可以開始編輯 底下會出現--INSERT--
按ESC可回到一開始的狀態，這時按下冒號(:)，則游標會跳到最下方，再輸入wq即可結束離開

git commit 輸入這行會看到畫面跳到你在 git 中設定的編輯器畫面，需要加入一些訊息，
		   如果沒打東西則這次的提交會中止，預設編輯器是vi
git commit -m "message" 簡化上面的動作 直接在指令加入說明，因此不會出現編輯器畫面，而是直接提交完畢

git status 可以看目前的狀態

git log 可以查看過去commit的紀錄

git remote add origin https://github.com/<your name>/<repository name>.git 
git push -u origin master

git pull 
git pull -a cat master    pull from remote 'cat' branch master

gitk -all & 在背景執行git的GUI
git branch 這個指令可以列出所有的 branch 並告訴你目前正在哪個 branch
git branch cat 假設我們現在要開一支新的 branch 叫做 cat ，使用 git branch 來幫助你開一支新的 branch 新的 branch cat 與 master 在同一條水平線上，表示目前他們的狀態是一模一樣的。

git checkout cat 雖然我們建立了一個 cat 的 branch ，但其實我們所在的 branch 還是在 master branch，因此我們現在還需要切換過去，因此我們使用 git checkout 來切換：
				 
git branch -d cat 刪除cat分支
				 
刪除檔案

要從Git刪除檔案，讀者需要將它從已被追蹤檔案中移除（更精確的來說，是從暫存區域移除），並且提交。 git rm命令除了完成此工作外，也會將該檔案從工作目錄移除。 因此讀者以後不會在未被追蹤檔案列表看到它。

若讀者僅僅是將檔案從工作目錄移除，那麼在git status的輸出，可看見該檔案將會被視為“已被變更且尚未被更新”（也就是尚未存到暫存區域）：				 
git rm readme.txt 若執行git rm，則會將暫存區域內的該檔案移除		 
git rm --cached readme.txt	保留工作目錄內的檔案，但從暫存區域移除			 
				 
git mv README.txt README 改名稱
				 
強制回復到上一次 commit 的版本:
有時候我們想要放棄所有修改回到 commit 時的狀態，這時候我們可以下 git reset --hard HEAD 來回復，HEAD 參數可以加上一些變化，
例如 HEAD^ 表示目前版本的上一個版本 HEAD~2 則是再上一個，因此你可以自由的跳回去之前的狀態。
http://blog.gogojimmy.net/2012/01/21/how-to-use-git-2-basic-usage-and-worflow/


綁訂機器的 SSH key http://wiki.csie.ncku.edu.tw/github
在啟動ssh-agent時，如果 ssh-agent -s 出現 
SSH_AUTH_SOCK=/tmp/ssh-jdYUhe6GvFV5/agent.15632; export SSH_AUTH_SOCK;
SSH_AGENT_PID=16228; export SSH_AGENT_PID;
echo Agent pid 16228;
則使用 eval $(ssh-agent -s) 來啟動ssh-agent

在將KEY加入ssh-agent時 如果ssh-add ~/.ssh/id_rsa 出現 Could not open a connection to your authentication agent.
則使用下面這行代碼建立agent
eval $(ssh-agent -s)


建完ssh後還是需要密碼的話，嘗試以下步驟
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
仍不行改再試以下(也許不必上面那行)
git remote -v 可能會出現https方式的，改成ssh方式
git remote rm origin 刪除origin
git remote add origin git@github.com:AXCJ/IoT.git 新增ssh方式的
git push -u origin master


ps -axc 顯示所有程序，只顯示程式名稱
ps -axc | grep Safari 顯示有Safari的項目
Kill -9 "PID" 強制(-9的功能)關閉PID對應的程式










